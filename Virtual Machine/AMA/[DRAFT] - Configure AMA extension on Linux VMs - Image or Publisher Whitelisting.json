{
  "mode": "Indexed",
  "policyRule": {
    "if": {
      "allOf": [
        {
          "field": "type",
          "equals": "Microsoft.Compute/virtualMachines"
        },
        {
          "anyOf": [
            {
              "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
              "exists": true
            },
            {
              "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
              "like": "Linux*"
            }
          ]
        },
        {
          "anyOf": [
            {
              "allOf": [
                {
                  "field": "Microsoft.Compute/imageId",
                  "exists": true
                },
                {
                  "count": {
                    "value": "[parameters('targetImage')]",
                    "where": {
                      "field": "Microsoft.Compute/imageId",
                      "like": "[current()]"
                    }
                  },
                  "greater": 0
                }
              ]
            },
            {
              "allOf": [
                {
                  "field": "Microsoft.Compute/imagePublisher",
                  "exists": true
                },
                {
                  "count": {
                    "value": "[parameters('targetPublisher')]",
                    "where": {
                      "allOf":[
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "like": "[coalesce(current().publisher,'*')]"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "[coalesce(current().sku,'*')]"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "[coalesce(current().offer,'*')]"
                        },
                        {
                          "field": "Microsoft.Compute/imageVersion",
                          "like": "[coalesce(current().version,'*')]"
                        }
                      ]
                    }
                  },
                  "greater": 0
                }
              ]
            }
          ]
        }
      ]
    },
    "then": {
      "effect": "[parameters('effect')]",
      "details": {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "roleDefinitionIds": [
          "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
        ],
        "existenceCondition": {
          "allOf": [
            {
              "field": "Microsoft.Compute/virtualMachines/extensions/type",
              "equals": "AzureMonitorLinuxAgent"
            },
            {
              "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
              "equals": "Microsoft.Azure.Monitor"
            },
            {
              "field": "Microsoft.Compute/virtualMachines/extensions/enableAutomaticUpgrade",
              "equals": "true"
            },
            {
              "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
              "in": [
                "Succeeded",
                "Provisioning succeeded"
              ]
            }
          ]
        },
        "deployment": {
          "properties": {
            "mode": "incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "vmName": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                }
              },
              "variables": {
                "extensionName": "AzureMonitorLinuxAgent",
                "extensionPublisher": "Microsoft.Azure.Monitor",
                "extensionType": "AzureMonitorLinuxAgent",
                "extensionTypeHandlerVersion": "1.12"
              },
              "resources": [
                {
                  "name": "[concat(parameters('vmName'), '/', variables('extensionName'))]",
                  "type": "Microsoft.Compute/virtualMachines/extensions",
                  "location": "[parameters('location')]",
                  "apiVersion": "2019-07-01",
                  "properties": {
                    "publisher": "[variables('extensionPublisher')]",
                    "type": "[variables('extensionType')]",
                    "typeHandlerVersion": "[variables('extensionTypeHandlerVersion')]",
                    "autoUpgradeMinorVersion": true,
                    "enableAutomaticUpgrade": true
                  }
                }
              ]
            },
            "parameters": {
              "vmName": {
                "value": "[field('name')]"
              },
              "location": {
                "value": "[field('location')]"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "effect": {
      "type": "String",
      "metadata": {
        "displayName": "Effect",
        "description": "Enable or disable the execution of the policy."
      },
      "allowedValues": [
        "DeployIfNotExists",
        "Disabled"
      ],
      "defaultValue": "DeployIfNotExists"
    },
    "targetImage": {
      "type": "Array",
      "metadata": {
        "displayName": "Image Id to Target",
        "description": "A list of Image Ids to target - you may use one * wildcard at any place in the Id to do a 'like' match."
      },
      "defaultValue": [
        "/subscriptions/xxxxxxxxxxxxxxxxxxxxxxxxx/resourceGroups/xxxxxxxxxxxxxxxxx/*"
      ]
    },
    "targetPublisher": {
      "type": "Array",
      "metadata": {
        "displayName": "Publishers to Target",
        "description": "A list of Objects indicating what publishers to target, the required keys are: publisher, version, sku and offer. You may use one * wildcard per key/value on on the object."
      },
      "defaultValue": [
        {
          "publisher": "*",
          "version": "*",
          "sku": "*",
          "offer": "*"
        }
      ]
    }
  }
}